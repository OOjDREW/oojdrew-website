%Rules about RuleML-2007 paper submission:
%When you submit you need to check what they are submitting and if they are allowable authors.

submit(?C:ProgramChair,?R:Requester,?SubmitingType,?Result) :-
 stringEqualIgnoreCase(?SubmitingType,abstract),
 abstractSubmittal(?C:ProgramChair,?R:Requester,?Result1,?Reason1),
 authorPossiblity(?C:ProgramChair,?R:Requester,?SubmitingType,?Result2,?Reason2),
 stringConcat(?Result,?Result1,?Reason1,?Result2,?Reason2).
 
submit(?C:ProgramChair,?R:Requester,?SubmitingType,?Result) :-
 stringEqualIgnoreCase(?SubmitingType,paper),
 paperSubmittal(?C:ProgramChair,?R:Requester,?Result),
 authorPossiblity(?C:ProgramChair,?R:Requester,?SubmitingType,?Result2,?Reason2),
 stringConcat(?Result,?Result1,?Reason1,?Result2,?Reason2).
 
submit(?C:ProgramChair,?R:Requester,?SubmitingType,?Result) :-
 stringEqualIgnoreCase(?SubmitingType,final),
 finalSubmittal(?C:ProgramChair,?R:Requester,?Result,?Reason),
 authorPossiblity(?C:ProgramChair,?R:Requester,?SubmitingType,?Result2,?Reason2),
 stringConcat(?Result,?Result1,?Reason1,?Result2,?Reason2).

%Rules to determine who can be an author a paper  
authorPossiblity(?C:ProgramChair,?R:Requester,?Authors,?Answer) :-
	authorRequirements(?C:ProgramChair,?R:Requester,?Authors,?Answer).

authorRequirements(?C:ProgramChair,?R:PCMember,"submission authors?", "Yes, second or later").
	authorRequirements(?C:ProgramChair,?R:ProgramChair, "submission authors?", "No, because ProgramChair").
 
%Past dead line and not a VIP
abstractSubmittal(?C:ProgramChair, ?R:Requester, "submission possible?", "No, because deadlinePassed") :-
	time(?X), deadline(abstract, ?D), greaterThan(?X,?D),naf(vip(?R:Request)).

paperSubmittal(?C:ProgramChair, ?R:Requester, "submission possible?", "No, because deadlinePassed") :-
	time(?X), deadline(paper, ?D), greaterThan(?X,?D),naf(vip(?R:Request)).

finalSubmittal(?C:ProgramChair, ?R:Requester, "submission possible?", "No, because deadlinePassed") :-
	time(?X), deadline(final, ?D), greaterThan(?X,?D),naf(vip(?R:Request)).

%Past dead line and a VIP
abstractSubmittal(?C:ProgramChair, ?R:Requester, "submission possible?" "Yes, but deadline has passed please submit asap") :-
	time(?X), deadline(abstract, ?D), greaterThan(?X,?D),vip(?R:Request).

paperSubmittal(?C:ProgramChair,?R:Requester,"submission possible?","Yes, but deadline has passed please submit asap") :-
	time(?X), deadline(paper, ?D), greaterThan(?X,?D),vip(?R:Request).

finalSubmittal(?C:ProgramChair,?R:Requester,"submission possible?", "Yes, but deadline has passed please submit asap") :-
	time(?X), deadline(final, ?D), greaterThan(?X,?D),vip(?R:Request).

%Deadline is still ongoing
abstractSubmittal(?To:ProgramChair,?From:Requester,"submission possible?","Yes, because deadline Ongoing") :-
	date(?X), deadline(abstract, ?D), lessThanOrEqual(?X,?D).

paperSubmittal(?To:ProgramChair,?From:Requester,"submission possible?","Yes, because deadline Ongoing") :-
	date(?X), deadline(paper, ?D), lessThanOrEqual(?X,?D).

finalSubmittal(?To:ProgramChair,?From:Requester,"submission possible?","Yes, because deadline Ongoing") :-
	date(?X), deadline(final, ?D), lessThanOrEqual(?X,?D).

%Deadline facts Year Month Day
deadline(abstract, 20070615).
deadline(paper,    20070629).
deadline(final,    20070817).

%Define a rule to figure out if someone is a vip should be more detailed, possible could relate to spondering level
vip(?R:Requester) :- important(?:R:Requester).